{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","className","s","messages","name","message","DialogItem","path","id","dialog","active","to","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","item","messagesElements","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,0B,oBCA5ID,EAAOC,QAAU,CAAC,SAAW,yBAAyB,QAAU,wBAAwB,YAAc,8B,sHCavFC,EAZA,SAACC,GAEZ,OACI,sBAAKC,UAAWC,IAAEC,SAAlB,UACKH,EAAMI,KACP,qBAAKH,UAAWC,IAAEG,QAAlB,SACKL,EAAMK,c,0BCKRC,EAVI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,qBAAKP,UAAWC,IAAEO,OAAS,IAAMP,IAAEQ,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIJ,EAAb,SAAoBP,EAAMI,U,kCCyBhCQ,EAAcC,YAAiB,IAc/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACf,GACpB,OACI,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACVC,SAAU,CAACC,IAAUX,GACrBR,KAAK,iBACLoB,YAAY,uBACpB,8BAAK,kDAOFC,EAzCC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAY3B,KAAM2B,EAAK3B,KAAMI,GAAIuB,EAAKvB,IAASuB,EAAKvB,OAChGwB,EAAmBN,EAAMvB,SAAS2B,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAQ1B,QAAS0B,EAAK1B,SAAc0B,EAAKvB,OAO3F,OACI,sBAAKP,UAAWC,IAAE2B,QAAlB,UACI,qBAAK5B,UAAWC,IAAE+B,aAAlB,SACKL,IAEL,qBAAK3B,UAAWC,IAAEC,SAAlB,SACK6B,IAEL,cAAClB,EAAD,CAAqBG,SAZT,SAACiB,GACjBlC,EAAMmC,YAAYD,EAAOE,uB,uECZ7BC,EAA6B,SAACX,GAAD,MAAY,CACzCY,OAAQZ,EAAMa,KAAKD,S,QCgBRE,sBACXC,mBAhBkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACe,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,UDPR,SAACQ,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAK9C,MAAMsC,OACR,cAACM,EAAD,eAAeE,KAAK9C,QADG,cAAC,IAAD,CAAUW,GAAG,eAHR,GACXoC,IAAMH,WAStC,OAFiCH,kBAAQJ,EAARI,CAAoCI,KCK1DL,CAEOf","file":"static/js/3.cbd24dda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Dialog_messages__2V75r\",\"message\":\"Dialog_message__MLmM6\",\"messageWrap\":\"Dialog_messageWrap__2AggI\"};","import s from './Dialog.module.css';\n\nconst Dialog = (props) => {\n    \n    return (\n        <div className={s.messages}>\n            {props.name}\n            <div className={s.message}>\n                {props.message}\n            </div>\n        </div>\n    )\n}\n\nexport default Dialog;","import { NavLink } from \"react-router-dom\";\nimport s from './DialogItem.module.css'\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n       </div>\n    )\n}\n\n\nexport default DialogItem;","import s from './Dialogs.module.css';\nimport Dialog from './Dialog/Dialog';\nimport DialogItem from './DialogItem/DialogItem';\nimport { Field, reduxForm } from 'redux-form';\nimport { TextArea } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\n\nconst Dialogs = (props) => {\n    \n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(item => <DialogItem name={item.name} id={item.id} key={item.id}/>)\n    let messagesElements = state.messages.map(item => <Dialog message={item.message} key={item.id}/>)\n\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messagesElements}\n            </div>\n            <AddMessageFormRedux onSubmit={addNewMessage} />\n        </div>\n    )\n}\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={TextArea}\n                    validate={[required, maxLength50]}\n                    name='newMessageBody' \n                    placeholder='Enter your message' />\n            <div><button>Send</button></div>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({  //ф-я возвращает объект, поэтому в круглых скобках\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to='/login' />\n            return <Component {...this.props} />\n        }\n    }\n    \n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedRedirectComponent;\n}\n\n","import { sendMessageCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport {withAuthRedirect} from './../../hoc/withAuthRedirect'\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect)(Dialogs)"],"sourceRoot":""}